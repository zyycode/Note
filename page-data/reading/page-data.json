{"componentChunkName":"component---src-templates-blog-post-js","path":"/reading/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"694be968-5f04-5f67-9daa-44e46cddde01","excerpt":"…","html":"<h3>重构的原则</h3>\n<p><strong>重构（名词）：</strong>对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。</p>\n<p><strong>重构（动词）：</strong>使用一系列重构方法，在不改变软件可观察行为的前提下，调整其结构。</p>\n<p>重构的关键在于运用大量微小且保持软件行为的步骤，一步步达成大规模的修改。可观察行为的意思是经过重构之后的代码应该与重构之前大致一样。重构是为了让代码“更容易理解，更容易修改”，但可能是程序运行的更慢或者更快，与之相似的是<strong>性能优化</strong>可以是程序运行的更快当时代码可能会更难理解。这两者之间需要更好的平衡。</p>\n<p>为何重构？<br><strong><em>重构改进软件的设计</em></strong>。如果没有重构，程序内部的代码（或者叫架构）会变得腐败变质，就像裹脚布又臭又长，变得更难理解以及维护。这是因为人们可能会因为需求的紧急导致在没有完全理解程序的整体设计的情况下，使得代码失去了原有的结构。经常性重构有助于代码维护自己该有的形态。改进设计的一个重要方向就是消除重复代码。<strong><em>重构是软件更容易理解</em></strong>。编写代码是告诉计算机做什么事，而它的响应事按照我的指示精确行动。所做的事情就是填补“我想要它做什么”和“我告诉它做什么”之间的缝隙。编程的核心就是在于“准确说出我想要”。当然更重要的是阅读我们代码不仅仅是计算机，而是接手我们代码的同行，这才是最重要的。我觉得如何使其他人更好的理解你的代码，需要要个技术文档，在接到需求时，需要先写一份技术文档，主要应该包括需求的理解，程序的设计实现，流程图之类的。编写代码可能只会占35%的时间，就像做题的时候需要打草稿理清解题思路，盖楼前需要有建筑设计图。重构还能帮助找到bug，提高编程速度。</p>\n<h3>第一组重构</h3>\n<h4>1.1 提炼函数 &#x3C;-> 内联函数</h4>\n<p><strong>提炼函数</strong></p>\n<p>提炼函数。将一些常用的代码放进独立的函数，从复用的角度来看，只要被用过不止一次的代码，就应该单独放进一个函数。最合理的观点是“将意图与实现分开”：如果你需要时间浏览一段代码才能弄秦它到底在干什么，那么就应该将其提炼到一个函数，并根据它所做的事为其命名。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ------------- before ---------------------</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">printOwing</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">invoice</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*************************'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'***** Customer Owes *****'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*************************'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// calculate outstanding</span>\n  <span class=\"token keyword\">let</span> outstanding <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> o <span class=\"token keyword\">of</span> invoice<span class=\"token punctuation\">.</span>orders<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    outstanding <span class=\"token operator\">+=</span> o<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// print details</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>invoice<span class=\"token punctuation\">.</span>customer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">amount: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>outstanding<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// --------------- after ---------------------</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">printOwing</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">invoice</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printBanner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> outstanding <span class=\"token operator\">=</span> <span class=\"token function\">calculateOutstanding</span><span class=\"token punctuation\">(</span>invoice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printDetails</span><span class=\"token punctuation\">(</span>outstanding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 提炼函数</span>\n  <span class=\"token comment\">// 无局部变量</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">printBanner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*************************'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'***** Customer Owes *****'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*************************'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 有局部变量</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">printDetails</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">outstanding</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>invoice<span class=\"token punctuation\">.</span>customer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">amount: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>outstanding<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 如果有些编程语言不支持嵌套函数，则将函数提升到顶层作用域</span>\n<span class=\"token comment\">// 对局部变量再赋值</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculateOutstanding</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">invoice</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 修改变量名易于理解</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> o <span class=\"token keyword\">of</span> invoice<span class=\"token punctuation\">.</span>orders<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">+=</span> o<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>内联函数</strong></p>\n<p>当有些函数内部的代码和函数名称同样清晰易读，那就可以去掉这个函数直接使用函数内的代码。还有若函数组织不合理(复杂函数)，可以将它们都内联到一个大的函数里，再以自己喜欢的方式提炼出小函数。\n重点在于始终小步前进。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ------------- before ----------------------</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">rating</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aDriver</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">moreThanFiveLateDeliveries</span><span class=\"token punctuation\">(</span>aDriver<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">moreThanFiveLateDeliveries</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dvr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> dvr<span class=\"token punctuation\">.</span>numberOfLateDeliveries <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------------- after -----------------------</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">rating</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aDriver</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> aDriver<span class=\"token punctuation\">.</span>numberOfLateDeliveries <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>1.2 提炼变量 &#x3C;-> 内联变量</h4>\n<p><strong>提炼变量</strong></p>\n<p>表达式有可能非常复杂难以阅读，局部变量可以将逻辑进行分解使得更好的阅读。在使用提炼变量的时候意味着需要将表达式命名，需要考虑这个名字所处的上下文。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ------------- before ----------------------</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">order</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// price is base price - quantity discount + shipping</span>\n  <span class=\"token keyword\">return</span> order<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span>itemPrice <span class=\"token operator\">-</span> \n    Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">-</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span>itemPrice <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span> <span class=\"token operator\">+</span>\n    Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span>itemPrice <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ------------- after -----------------------</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">order</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 底价</span>\n  <span class=\"token keyword\">const</span> basePrice <span class=\"token operator\">=</span> order<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span>itemPrice<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 批发折扣</span>\n  <span class=\"token keyword\">const</span> quantityDiscount <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">-</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span>itemPrice <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 运费</span>\n  <span class=\"token keyword\">const</span> shipping <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>basePrice <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> basePrice <span class=\"token operator\">-</span> quantityDiscount <span class=\"token operator\">+</span> shipping<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>内联变量</strong></p>\n<p>当变量的名字并不比表达式本身更具表现力，这时候就是和用内联的方法消除变量。</p>\n<h4>1.3 改变函数声明</h4>","frontmatter":{"title":"重构","date":"August 24, 2020","description":"准备总结"}}},"pageContext":{"slug":"/reading/","previous":{"fields":{"slug":"/rust-learning-0/"},"frontmatter":{"title":"Learning Rust Round 1 - Variable"}},"next":{"fields":{"slug":"/snabbdom/"},"frontmatter":{"title":"Snabbdom 源码"}}}}}